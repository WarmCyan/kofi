TODO: [A] faster way to add link of current note to searching other note (a reverse backlink via search interface) +vim

TODO: [B] javascript in rendered version to allow expansion of links (makes post request) +render
TODO: [B] javascript show map
TODO: [B] add droidsansmono font +render
TODO: [B] tool to collect array of notes based on tag algebra +tags +tool

TODO: [C] stats section in inbox +inbox
TODO: [C] add link to recent page in inbox +inbox
TODO: [C] create images and scripts directories on init

TODO: [D] extract the common regex patterns to util

TODO: syntax highlighting in ``` code +render
TODO: Prune empty notes
TODO: Add folder for scripts to automatically run on any write etc
TODO: javascript copy filename link
TODO: kofi-attend (quick add notes) +tool
TODO: map to sqlite
TODO: ability to run script on all links on page

WAIT: add dates to recent page
WAIT: fix standalone link pattern :: matching in refresh-links
WAIT: are multiple links between two files handled correctly?
WAIT: there are still update problems where if I update a note that is expanded elsewhere, the expansion doesn't update until that file is saved
WAIT: only replace content of file with content script if it doesn't error out
WAIT: if adding in maps is common enough, might be worth adding a script to go through creating note with content-script and adding the include line

STRT: bin script documentation +docs
WAIT: list the tool areas/connections +docs

WAIT: turn selected text into title of new note +vim
WAIT: :kofinew vim command (simply calls new-note) +vim
WAIT: search-edit for inside of vim +vim
WAIT: vim thing to directly call get-link on md filename (expand) +vim
WAIT: vim copy filename +vim
WAIT: shortcut to move cursor to filename in next link +vim
WAIT: vim script to change a link to an include and vice versa +vim
WAIT: toggle for enabling/disabling extension (add/remove the <>) +vim

WAIT: inserting "+" autocomplete for tags +tags
WAIT: tag search script that compiles list of links to all results +tags
WAIT: add tag algebra options to mapping +tags

WAIT: favicon +render
WAIT: way to dilneate linking versus expansions versus inclusion in diagrams +render

WAIT: search fzf window that keeps opening itself/stays open, but selected things open in qutebrowser +tool
WAIT: refresh content scripts (run on all) [and then refresh expansions] +tool
WAIT: command to send editor to browser and vice versa +tool
WAIT: command to copy/make a copy of a note (automatically create link/backlink) +tool
WAIT: tool to refresh everything in a file (don't do until :: fixed) +tool
WAIT: custom link resolution syntax


DONE: script to get text line TOC reference for filename
DONE: zettelkasten initialization and config setup script
DONE: add description to get-link and template and ability to add that to return text
DONE: tool to get link from filename
DONE: create date script
DONE: [A] add vim au bufreadpost to check for kofi comment at beginning of file to load extra vim things +vim
DONE: [A] move vim specific things into this repo in separate vim file +vim
DONE: [A] script to turn all new-expanded-notes into actual notes and rewrite expander doc
DONE: shortcut in vim to add new-expanded-note syntax +vim
DONE: [B] script to propagate changes to expanded notes
DONE: [B] script to return expansion syntax of a given filename
DONE: [B] vim shortcut to utilize script to get expansion of filename +vim
DONE: [B] script to fold expanded syntax
DONE: [B] vim shortcut to utilize script to fold expanded syntax +vim
DONE: [C] vim on-write functionality (add set-date) +vim
DONE: [C] script to check if backlink to file from given exists
DONE: [C] script to insert backlink to file
DONE: [D] vim thing to create backlink and open in vim +vim
DONE: script to update/refresh all link titles (expanded and non)
DONE: refresh expansions (in case the note itself had been changed)
DONE: vim buffer enter refresh expansions +vim
DONE: [A] render makefile
DONE: [A] copy makefile on zettelkasten init
DONE: [A] add makefile to tools setup
DONE: script to run pandoc render +render
DONE: [A] script to add to recent list
DONE: inbox class
DONE: inbox handler
DONE: add bat as file render for search-edit
DONE: html/css template +render
DONE: content script execution
DONE: output script execution
DONE: add bat preview support to vim fzf search +vim
DONE: tool to ls and set zettelkasten
DONE: kofi sync (and include refreshing makefile?)
DONE: python pandoc filter to change markdown links into html links +render
DONE: command to open/edit inbox
DONE: script to start server +render
DONE: mapping choose root node +graph
DONE: [A] add "hidden" data tag to exclude from recent and disconnected
DONE: [A] on any includes, run any content scripts
DONE: [A] log everything +cleanup
DONE: subfolder all kofi bin commands +cleanup
DONE: [A] redirect all error output to log
DONE: server stuff in tmux +cleanup
DONE: start server and log
DONE: kn and kse should be aliases in bashrc, not "tools"
DONE: add bib to render
DONE: [A] separate public render +render
DONE: [A] tag strings being deleted +tags
DONE: [A] mobile css +render
DONE: [A] references finder/autocomplete +references
DONE: [A] pandoc filter to wrap expansions in classed div +render
DONE: don't open file on add backlink
DONE: [D] command to run a zettel script +tool
DONE: [A] maps for every page
DONE: [C] home (inbox) link +render
DONE: [D] script to fzf search and then open in browser +render

CANC: [A] do not propagate changes out if the original expandee note is newer than the the note currently being written (NOTE: cannot do this since time is not recorded)
